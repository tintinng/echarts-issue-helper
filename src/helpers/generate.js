import marked from 'marked'
import copy from 'copy-to-clipboard'
import hljs from 'highlight.js'

/**
 * 
 * @param {*} markdown 
 * @returns {
 *    markdown: origin markdown plus footnote,
 *    html: transfered markdown for preview
 * }
 */
export function generate (markdown) {
  const withMarker = `${markdown}\n\n<!-- This issue is generated by echarts-issue-helper. DO NOT REMOVE -->`

  copy(withMarker)

  const renderer = new marked.Renderer({
    gfm: true,
    tables: true,
    breaks: false,
    pedantic: false,
    sanitize: true,
    smartLists: true,
    smartypants: false
  })

  // Extend linkRenderer to return links that open in a new tab
  const linkRenderer = renderer.link
  renderer.link = (href, title, text) => {
      const html = linkRenderer.call(renderer, href, title, text)
      return html.replace(/^<a /, '<a target="_blank" rel="nofollow" ')
  };

  // highlight code
  marked.setOptions({
    highlight: function(code) {
      return hljs.highlightAuto(code).value
    }
  })

  return {
    markdown: withMarker,
    html: marked(markdown, { renderer })
  }
}
